{% block form_javascript %}
{% spaceless %}
    {% for child in form %}
        {{ form_javascript(child) }}
    {% endfor %}
    {% block form_javascript_prototype %}{% endblock form_javascript_prototype %}
{% endspaceless %}
{% endblock form_javascript %}

{% block field_javascript "" %}

{% block bootstrap_collection_javascript_prototype %}
$field.bootstrapCollection({
    allow_add:        {{ allow_add|default(0) }},
    allow_delete:     {{ allow_delete|default(0) }},
    sortable:         {{ sortable|default(0) }},
    sortable_field:   '{{ sortable_field }}',
    prototype_name:   '{{ prototype_name }}',
    trans: {
        new_label:      '{{ new_label|trans({}, translation_domain) }}',
        confirm:        '{{ 'bootstrap_collection.confirm.delete'|trans({}, 'AvocodeFormExtensions') }}',
        confirm_batch:  '{{ 'bootstrap_collection.confirm.batchDelete'|trans({}, 'AvocodeFormExtensions') }}'
    },
    javascript: function(id) {
    {% if prototype|default(false) %}
        {% if prototype.vars.compound %}
            {% for child in prototype %}
                $field = $('#' + id + '_{{ child.vars.name }}');
                {{ form_javascript(child, true) }}
            {% endfor %}
        {% else %}
            $field = $('#' + id);
            {{ form_javascript(prototype, true) }}
        {% endif %}
    {% endif %}
    }
});
{% endblock bootstrap_collection_javascript_prototype %}

{% block collection_fieldset_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        
    {% block collection_fieldset_javascript_prototype %}
        {{ block('bootstrap_collection_javascript_prototype') }}
    {% endblock collection_fieldset_javascript_prototype %}
    });
</script>

{% for child in form %}
    {{ form_javascript(child) }}
{% endfor %}
{% endspaceless %}
{% endblock collection_fieldset_javascript %}

{% block collection_table_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        
    {% block collection_table_javascript_prototype %}
        {{ block('bootstrap_collection_javascript_prototype') }}
    {% endblock collection_table_javascript_prototype %}
    });
</script>

{% for child in form %}
    {{ form_javascript(child) }}
{% endfor %}
{% endspaceless %}
{% endblock collection_table_javascript %}

{% block collection_upload_javascript %}
{% spaceless %}
<script type="text/javascript">
    $(document).ready(function(){
        var $field = $('#{{ id }}');
        
    {% block collection_upload_javascript_prototype %}
        $field.uploadCollection({
            sortable:                 {{ sortable|default(0) }},
            sortable_field:           '{{ sortable_field }}',
            maxNumberOfFiles:         {{ maxNumberOfFiles|default('undefined') }},
            maxFileSize:              {{ maxFileSize|default('undefined') }},
            minFileSize:              {{ minFileSize|default('undefined') }},
            acceptFileTypes:          {{ acceptFileTypes|default('undefined') }},
            previewAsCanvas:          {{ previewAsCanvas|default(0) }},
            prependFiles:             {{ prependFiles|default(0) }},
            previewSourceFileTypes:   {{ previewSourceFileTypes }},
            previewSourceMaxFileSize: {{ previewSourceMaxFileSize }},
            previewMaxWidth:          {{ previewMaxWidth }},
            previewMaxHeight:         {{ previewMaxHeight }},
            trans: {
                maxNumFiles:        '{{ 'upload_collection.errors.maxNumFiles'|trans({}, 'AvocodeFormExtensions') }}',
                typeNotAllowed:     '{{ 'upload_collection.errors.typeNotAllowed'|trans({}, 'AvocodeFormExtensions') }}',
                maxFileSize:        '{{ 'upload_collection.errors.maxFileSize'|trans({}, 'AvocodeFormExtensions') }}',
                minFileSize:        '{{ 'upload_collection.errors.minFileSize'|trans({}, 'AvocodeFormExtensions') }}',
                confirmBatchDelete: '{{ 'upload_collection.confirm.batchDelete'|trans({}, 'AvocodeFormExtensions') }}'
            }
        });
    {% endblock collection_upload_javascript_prototype %}

        // Create JSON array for existing files
        var files = { 
            'files': [
            {% for key, item in form.vars.data -%}
                {
                    "{{ primary_key }}": "{{ attribute(item, primary_key) }}",
                {% if nameable %}
                    "{{ nameable_field }}": "{{ attribute(item, nameable_field) }}",
                {% endif %}
                {% if sortable %}
                    "{{ sortable_field }}": "{{ attribute(item, sortable_field) }}",
                {% endif %}
                {% if editable %}
                {% for field in editable %}
                    "{{ field }}": "{{ attribute(item, field) }}",
                {% endfor %}
                {% endif %}
                    "size": {{ item.size }},
                    "url": "{{ vich_uploader_asset(item, 'file') }}",
                {% if item.preview %}
                    {% if thumbnailGenerator is sameas('avalanche') and thumbnailFilter %}
                    "thumbnail_url": "{{ vich_uploader_asset(item, 'file')|apply_filter(thumbnailFilter) }}",
                    {% elseif item.size < previewSourceMaxFileSize %}
                    "thumbnail_url": "{{ vich_uploader_asset(item, 'file') }}",
                    {% endif %}
                {% endif %}
                    "count": "{{ key }}",
                }
                {%- if not loop.last %},{% endif %}
            {% endfor %}
            ] // end of files array
        }; // end of files object

        // Load existing files:
        $field.uploadCollection('loadFiles', files);
    });
</script>

{% endspaceless %}
{% endblock collection_upload_javascript %}

{% block color_picker_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        
    {% block color_javascript_prototype %}
        var $configs = $.extend({
            color: '#' + $field.val(),
            onBeforeShow: function() {
                $(this).ColorPickerSetColor($field.val());
            }
        }, {{ configs|json_encode|raw }});

        {% if widget == "image" %}
        $picker = $('#{{ id }}_color');

        $picker.ColorPicker($.extend({
            onChange: function(hsb, hex, rgb) {
                $field.val(hex);

                $('div', $picker).css({
                    backgroundColor: '#' + hex
                });
            }
        }, $configs));
        {% else %}
        $field.ColorPicker($.extend({
            onChange: function(hsb, hex, rgb) {
                $field.val(hex).css({
                    backgroundColor: '#' + hex
                });
            }
        }, $configs));
        {% endif %}
    {% endblock color_javascript_prototype %}
    });
</script>
{% endspaceless %}
{% endblock color_picker_javascript %}

{% block select2_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $field = $('#{{ id }}');

    {% block select2_javascript_prototype %}
        $field.select2({
        {% for key,val in configs %}
            {% if val[:1] is sameas('{') and val|reverse[:1] is sameas('}') %}
                {{ key }}: {{ val|raw }}
            {% elseif val[:8] is sameas('function') %}
                {{ key }}: {{ val|raw }}
            {% else %}
                {{ key }}: "{{ val|raw }}"
            {%- endif -%}
            {%- if not loop.last %},{% endif %}
        {% endfor %}
        });
    {% endblock %}
    });
</script>
{% endspaceless %}
{% endblock select2_javascript %}